@model ItAcademy.ThunderSound.Client.Models.TrackViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Track", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<fieldset>
    <legend>Добавить трек</legend>
    <div class="editor-label">Название</div>
    <div class="editor-field">

        @Html.EditorFor(model => model.TrackName)
        @Html.ValidationMessageFor(model => model.TrackName, "", new { @class = "text-danger" })
    </div>

    <div class="editor-label">Жанр</div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Genre.GenreId, Model.SelectListGenres, "--Select--", new { @id = "genre" });
        @Html.ValidationMessageFor(model => model.Genre.GenreId, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">Исполнитель</div>
    <div id="singerPlace" class="editor-field">
        @Html.DropDownListFor(model => model.Singer.SingerId, Model.SelectListSingers, "--Select--", new { @id = "singer" });
        @Html.ValidationMessageFor(model => model.Singer.SingerId, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">Альбомы</div>
    <div id="playListPlace" class="editor-field">
        @Html.DropDownListFor(model => model.PlayList.PlayListId, Model.SelectListPlayLists, "--Select--", new { @id = "playList" })
        @Html.ValidationMessageFor(model => model.PlayList.PlayListId, "", new { @class = "text-danger" })
    </div>
    <div class="editor-label">Файл трека</div>
    <div class="editor-field">
        <input type="file" name="@Html.NameFor(model=> model.UploadTrack)" />
        @Html.ValidationMessageFor(model => model.UploadTrack, "", new { @class = "text-danger" })
    </div>
    @Html.ValidationSummary(false);
    <p>
        <input type="submit" value="Добавить" />
    </p>
</fieldset>
}

<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>

<script>
    $(document).ready(function () {
            $('#genre').change(function () {
            window.sessionStorage.setItem("genre", this.value);
            $.ajax({
                type: "post",
                url: "/Track/GetSinger",
                data: { genreId: $('#genre').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var singer = "<select id='singer' name='Singer.SingerId'>";
                    singer = singer + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        singer = singer + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    singer = singer + '</select>';
                    $('#singerPlace').html(singer);
                    $('#playList').empty();
                    
                    var playList = "<select id='playList' name='PlayList.PlayListId'>";
                    playList = playList + '<option value="">--Select--</option>';
                    playList = playList + '</select>';
                    $('#playListPlace').html(playList);
                }
            });
        });
        $(document).on('change', '#singer', function () {
            window.sessionStorage.setItem("singer", this.value);
            $.ajax({
                type: "post",
                url: "/Track/GetPlayList",
                data: { singerId: $('#singer').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var playList = "<select id='playList' name='PlayList.PlayListId'>";
                    playList = playList + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        playList = playList + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    playList = playList + '</select>';
                    $('#playListPlace').html(playList);
                }
            });
        });
        $(document).on('change', '#playList', function () {
        window.sessionStorage.setItem("playList", this.value);
        });

    });
</script>
